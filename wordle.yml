# aws cloudformation create-stack --stack-name wordle --template-body file://wordle.yml --capabilities CAPABILITY_NAMED_IAM
# aws cloudformation delete-stack --stack-name wordle
# aws cloudformation update-stack --stack-name wordle --template-body file://wordle.yml --capabilities CAPABILITY_NAMED_IAM

Resources:
  WordleDeploymentBucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: wordle-deployment-bucket
      VersioningConfiguration: 
        Status: Enabled
      Tags:
      - Key: Owner
        Value: stevrobu
        Key: App
        Value: 001
      BucketEncryption: 
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  WordleDeploymentPipelineStartPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: WordleDeploymentPipelineStartPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - codepipeline:StartPipelineExecution
          Resource:
          - !Join ['', ['arn:aws:codepipeline:', !Ref AWS::Region, ':', !Ref AWS::AccountId, ':', !Ref WordleCodePipeline]]
      Roles:
      - !Ref WordleDeploymentPipelineStartRole
  WordleDeploymentPipelineStartRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Action: sts:AssumeRole
      MaxSessionDuration: 3600
      RoleName: WordleDeploymentPipelineStartRole
      Tags:
      - Key: Owner
        Value: stevrobu
        Key: App
        Value: 001
  DeploymentPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      MaxSessionDuration: 3600
      RoleName: WordleDeploymentPipelineRole
      Tags:
      - Key: Owner
        Value: stevrobu
        Key: App
        Value: 001
  DeploymentPipelinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: WordleDeploymentPipelinePolicy
      PolicyDocument: 
        Statement:
        - Action:
          - iam:PassRole
          Resource: "*"
          Effect: Allow
          Condition:
            StringEqualsIfExists:
              iam:PassedToService:
              - cloudformation.amazonaws.com
              - elasticbeanstalk.amazonaws.com
              - ec2.amazonaws.com
              - ecs-tasks.amazonaws.com
        - Action:
          - codecommit:CancelUploadArchive
          - codecommit:GetBranch
          - codecommit:GetCommit
          - codecommit:GetRepository
          - codecommit:GetUploadArchiveStatus
          - codecommit:UploadArchive
          Resource: "*"
          Effect: Allow
        - Action:
          - codedeploy:CreateDeployment
          - codedeploy:GetApplication
          - codedeploy:GetApplicationRevision
          - codedeploy:GetDeployment
          - codedeploy:GetDeploymentConfig
          - codedeploy:RegisterApplicationRevision
          Resource: "*"
          Effect: Allow
        - Action:
          - codestar-connections:UseConnection
          Resource: "*"
          Effect: Allow
        - Action:
          - elasticbeanstalk:*
          - ec2:*
          - elasticloadbalancing:*
          - autoscaling:*
          - cloudwatch:*
          - s3:*
          - sns:*
          - cloudformation:*
          - rds:*
          - sqs:*
          - ecs:*
          Resource: "*"
          Effect: Allow
        - Action:
          - lambda:InvokeFunction
          - lambda:ListFunctions
          Resource: "*"
          Effect: Allow
        - Action:
          - opsworks:CreateDeployment
          - opsworks:DescribeApps
          - opsworks:DescribeCommands
          - opsworks:DescribeDeployments
          - opsworks:DescribeInstances
          - opsworks:DescribeStacks
          - opsworks:UpdateApp
          - opsworks:UpdateStack
          Resource: "*"
          Effect: Allow
        - Action:
          - cloudformation:CreateStack
          - cloudformation:DeleteStack
          - cloudformation:DescribeStacks
          - cloudformation:UpdateStack
          - cloudformation:CreateChangeSet
          - cloudformation:DeleteChangeSet
          - cloudformation:DescribeChangeSet
          - cloudformation:ExecuteChangeSet
          - cloudformation:SetStackPolicy
          - cloudformation:ValidateTemplate
          Resource: "*"
          Effect: Allow
        - Action:
          - codebuild:BatchGetBuilds
          - codebuild:StartBuild
          - codebuild:BatchGetBuildBatches
          - codebuild:StartBuildBatch
          Resource: "*"
          Effect: Allow
        - Effect: Allow
          Action:
          - devicefarm:ListProjects
          - devicefarm:ListDevicePools
          - devicefarm:GetRun
          - devicefarm:GetUpload
          - devicefarm:CreateUpload
          - devicefarm:ScheduleRun
          Resource: "*"
        - Effect: Allow
          Action:
          - servicecatalog:ListProvisioningArtifacts
          - servicecatalog:CreateProvisioningArtifact
          - servicecatalog:DescribeProvisioningArtifact
          - servicecatalog:DeleteProvisioningArtifact
          - servicecatalog:UpdateProduct
          Resource: "*"
        - Effect: Allow
          Action:
          - cloudformation:ValidateTemplate
          Resource: "*"
        - Effect: Allow
          Action:
          - ecr:DescribeImages
          Resource: "*"
        - Effect: Allow
          Action:
          - states:DescribeExecution
          - states:DescribeStateMachine
          - states:StartExecution
          Resource: "*"
        - Effect: Allow
          Action:
          - appconfig:StartDeployment
          - appconfig:StopDeployment
          - appconfig:GetDeployment
          Resource: "*"
        Version: '2012-10-17'
      Roles:
      - !Ref DeploymentPipelineRole
  WordleOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: wordleappaccesscontrol
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        PriceClass: PriceClass_All
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior: 
          AllowedMethods: 
          - GET
          - HEAD
          - OPTIONS
          ViewerProtocolPolicy: allow-all
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 #CachingOptimized policy ID
          TargetOriginId: wordleS3Origin
          # PathPattern: '*'
        Origins:
        - DomainName: !GetAtt WordleDeploymentBucket.RegionalDomainName
          Id: wordleS3Origin
          OriginAccessControlId: !GetAtt WordleOriginAccessControl.Id
          S3OriginConfig:
            OriginAccessIdentity: ''
      Tags:
      - Key: Owner
        Value: stevrobu
        Key: App
        Value: 001
  WordleDeploymentBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WordleDeploymentBucket
      PolicyDocument:
        Version: '2008-10-17'
        Id: WordleDeploymentBucketPolicy
        Statement:
        - Sid: PolicyForCloudFrontPrivateContent
          Action: 's3:GetObject'
          Effect: Allow
          Principal:
            Service: cloudfront.amazonaws.com
          Resource: !Join ['', [!GetAtt WordleDeploymentBucket.Arn, '/*']]
          Condition:
            StringEquals:
              "AWS:SourceArn":
              - !Join ['', ['arn:aws:cloudfront::', !Ref AWS::AccountId, ':distribution/', !Ref CloudFrontDistribution]]
  WordleCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: app-staging-jsr
      Name: WordleDeploymentPipeline
      RoleArn: !GetAtt DeploymentPipelineRole.Arn
      Stages:
      - Actions: 
        - RunOrder: 1
          OutputArtifacts:
          - Name: SourceArtifact
          ActionTypeId:
            Category: Source
            Owner: AWS
            Provider: S3
            Version: '1'
          Region: us-east-1
          Name: Source
          Configuration:
            S3Bucket: app-staging-jsr
            S3ObjectKey: 'wordle/wordle.zip'
            PollForSourceChanges: 'false'
          Namespace: SourceVariables
        Name: Source
      - Actions:
        - Name: Deploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: S3
            Version: '1'
          RunOrder: 1
          Configuration:
            BucketName: !Ref WordleDeploymentBucket
            Extract: 'true'
          OutputArtifacts: []
          InputArtifacts:
          - Name: SourceArtifact
          Region: us-east-1
          Namespace: DeployVariables
        Name: Deploy
      Tags:
      - Key: Owner
        Value: stevrobu
        Key: App
        Value: 001
  StagingBucketEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: 'Amazon CloudWatch Events rule to automatically start your pipeline when a change occurs in the Amazon S3 object key or S3 folder. Deleting this may prevent changes from being detected in that pipeline. Read more: http://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-about-starting.html'
      EventPattern: 
        source:
        - aws.s3
        detail-type:
        - AWS API Call via CloudTrail
        detail:
          eventSource:
          - s3.amazonaws.com
          eventName:
          - PutObject
          - CompleteMultipartUpload
          - CopyObject
          requestParameters:
            bucketName:
            - app-staging-jsr
            key:
            - wordle/wordle.zip
      Name: WordleStagingBucketEventRule
      State: ENABLED
      Targets:
      - Arn: !Join ['', ['arn:aws:codepipeline:', !Ref AWS::Region, ':', !Ref AWS::AccountId, ':', !Ref WordleCodePipeline]]
        Id: WordleDeploymentPipeline
        RoleArn: !GetAtt WordleDeploymentPipelineStartRole.Arn
Outputs:
  SiteDomain: 
    Value: !GetAtt CloudFrontDistribution.DomainName